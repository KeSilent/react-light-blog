// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameSysUser = "sys_users"

// SysUser 用户表
type SysUser struct {
	ID          int64          `gorm:"column:id;type:bigint;primaryKey;comment:用户ID" json:"id"`                     // 用户ID
	Username    string         `gorm:"column:username;type:varchar(64);not null;comment:用户名" json:"username"`       // 用户名
	Password    string         `gorm:"column:password;type:varchar(255);not null;comment:密码" json:"password"`       // 密码
	NickName    string         `gorm:"column:nick_name;type:varchar(64);comment:昵称" json:"nickName"`                // 昵称
	Avatar      string         `gorm:"column:avatar;type:varchar(255);comment:头像" json:"avatar"`                    // 头像
	AuthorityID int64          `gorm:"column:authority_id;type:bigint;comment:角色ID" json:"authorityId"`             // 角色ID
	Phone       string         `gorm:"column:phone;type:varchar(11);comment:手机号" json:"phone"`                      // 手机号
	Email       string         `gorm:"column:email;type:varchar(128);comment:邮箱" json:"email"`                      // 邮箱
	Status      bool           `gorm:"column:status;type:tinyint(1);default:1;comment:状态(0:禁用,1:启用)" json:"status"` // 状态(0:禁用,1:启用)
	CreateTime  time.Time      `gorm:"column:create_time;type:datetime;default:CURRENT_TIMESTAMP" json:"createTime"`
	UpdateTime  *time.Time     `gorm:"column:update_time;type:datetime" json:"updateTime"`
	HeaderImg   string         `gorm:"column:header_img;type:varchar(255)" json:"headerImg"`
	DeletedAt   *time.Time     `gorm:"column:deleted_at;type:datetime" json:"deletedAt"`
	Authorities []SysAuthority `gorm:"joinForeignKey:sys_user_id;joinReferences:sys_authority_authority_id;many2many:sys_user_authority" json:"authorities"`
	Authority   SysAuthority   `gorm:"foreignKey:authority_id" json:"authority"`
}

// TableName SysUser's table name
func (*SysUser) TableName() string {
	return TableNameSysUser
}
